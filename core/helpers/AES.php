<?php

   if (!function_exists('encrypt')) {
    /**
     * Encrypts a given value using the configured cipher mode and encryption key.
     *
     * Parameters:
     * @param string $value The value to be encrypted.
     *
     * Returns:
     * @return string The encrypted string, encoded in Base64, which includes the IV (Initialization Vector), 
     *                HMAC (Hash-based Message Authentication Code), and the ciphertext.
     */
      function encrypt(string $value): string {
         $cipher = config('session.encrypt_mode');
         $key = config('session.encrypt_key');
         $ivlen = openssl_cipher_iv_length($cipher);
         $iv = openssl_random_pseudo_bytes($ivlen);
         $ciphertext_row = openssl_encrypt($value, $cipher, $key, OPENSSL_RAW_DATA, $iv);
         $hmac = hash_hmac('sha256', $ciphertext_row, $key, true);
         $ciphertext = base64_encode($iv.$hmac.$ciphertext_row);

         return $ciphertext;
      }
   }


   if (!function_exists('decrypt')) {
    /**
     * Decrypts a Base64-encoded string back to its original value, verifying its integrity with HMAC.
     *
     * Parameters:
     * @param string $ciphertext The encrypted Base64 string generated by the `encrypt` function.
     *
     * Returns:
     * @return string|false The decrypted original value if the HMAC validation is successful. 
     *                      Returns false if validation fails or the decryption is unsuccessful.
     */
      function decrypt(string $ciphertext): string|false {
         $cipher = config('session.encrypt_mode');
         $key = config('session.encrypt_key');
         $convert = base64_decode($ciphertext);
         $ivlen = openssl_cipher_iv_length($cipher);
         $iv = substr($convert, 0, $ivlen);
         $hmac = substr($convert, $ivlen, 32);
         $ciphertext_row = substr($convert, $ivlen+32);
         $original_text = openssl_decrypt($ciphertext_row, $cipher, $key, OPENSSL_RAW_DATA, $iv);
         $calcmac = hash_hmac('sha256', $ciphertext_row, $key, true);

         if (hash_equals($hmac, $calcmac)) {
            return $original_text;
         }

         return false;
      }
   }